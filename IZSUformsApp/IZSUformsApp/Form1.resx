<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBas.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>